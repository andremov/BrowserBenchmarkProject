{"version":3,"sources":["Components/Start.js","Components/End.js","Components/TestComponent.js","Components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["Start","action","event","preventDefault","window","mainComponent","setTestNumber","className","onClick","this","Component","End","TestComponent","state","attempts","testAttempts","style","testStringOuter","testStringInner","testNum","doClip","swapStyle","setTimeout","defTimer","setState","props","testData","outer","inner","console","log","skip","testLength","tests","name","comp","timed","titled","isTest","MainComponent","context","currentTest","progress","handleProgress","p","t","test","setInterval","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.751f91cb.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nexport class Start extends Component {\r\n    action = event => {\r\n        event.preventDefault();\r\n\r\n        window.mainComponent.setTestNumber(1);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"test\">\r\n                <div onClick={this.action} className=\"btn\">\r\n                    Start\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nexport class End extends Component {\r\n    action = event => {\r\n        event.preventDefault();\r\n\r\n        window.mainComponent.setTestNumber(0);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"test\">\r\n                Finished.\r\n\r\n                <div onClick={this.action} className=\"btn\">\r\n                    Back\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport {defTimer, testAttempts} from \"./MainComponent\";\r\n\r\nexport class TestComponent extends Component {\r\n\r\n    state = {\r\n        attempts : testAttempts,\r\n        style : false,\r\n        testStringOuter : ' ',\r\n        testStringInner : ' ',\r\n        testNum : -1,\r\n        doClip : false\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.testNum !== this.props.testData.testNum) {\r\n            const {testNum, outer, inner, doClip} = this.props.testData;\r\n            this.setState({\r\n                attempts : testAttempts,\r\n                style : false,\r\n                testNum,\r\n                testStringOuter : outer,\r\n                testStringInner : inner,\r\n                doClip\r\n            });\r\n\r\n            setTimeout(this.swapStyle, defTimer);\r\n        }\r\n    }\r\n\r\n    swapStyle = () => {\r\n        let {style, attempts} = this.state;\r\n        style = !style;\r\n\r\n        if (!style) {\r\n            attempts --;\r\n        }\r\n\r\n        if (attempts !== 0) {\r\n            setTimeout(this.swapStyle, defTimer);\r\n        }\r\n\r\n        this.setState( {\r\n            style, attempts\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const {style, testStringOuter, testStringInner, doClip} = this.state;\r\n        console.log(this.state);\r\n\r\n        return (\r\n            <div className=\"test\">\r\n                <div className={'transition-object'+(style? testStringOuter : '')}>\r\n                    <div className={'object '+(doClip? ' clip' : '')+(style? testStringInner : '')}>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Start} from \"./Start\";\r\nimport {End} from \"./End\";\r\nimport {TestComponent} from \"./TestComponent\";\r\nexport const defTimer = 2000;\r\nexport const testAttempts = 3;\r\n\r\nconst skip = 1;\r\nconst testLength = 15;\r\nconst tests = [\r\n    {\r\n        name : '',\r\n        comp : <Start />,\r\n        timed : false,\r\n        titled : false,\r\n        isTest : false\r\n    },\r\n    {\r\n        outer : ' ',\r\n        inner : ' rotate',\r\n        doClip : false,\r\n        isTest : true,\r\n        name : 'Rotate Test',\r\n        timed : true,\r\n        titled : true\r\n    },\r\n    {\r\n        outer : ' ',\r\n        inner : ' scale',\r\n        doClip : false,\r\n        isTest : true,\r\n        name : 'Scale Test',\r\n        timed : true,\r\n        titled : true\r\n    },\r\n    {\r\n        outer : ' ',\r\n        inner : ' rotatescale',\r\n        doClip : false,\r\n        isTest : true,\r\n        name : 'Scale + Rotate Test',\r\n        timed : true,\r\n        titled : true\r\n    },\r\n    {\r\n        outer : ' shadow',\r\n        inner : ' ',\r\n        doClip : false,\r\n        isTest : true,\r\n        name : 'Drop Shadow Test',\r\n        timed : true,\r\n        titled : true\r\n    },\r\n    {\r\n        outer : ' shadow',\r\n        inner : ' scale',\r\n        doClip : false,\r\n        isTest : true,\r\n        name : 'Shadow + Scale Test',\r\n        timed : true,\r\n        titled : true\r\n    },\r\n    {\r\n        outer : ' shadow',\r\n        inner : ' rotatescale',\r\n        doClip : false,\r\n        isTest : true,\r\n        name : 'Shadow + Scale + Rotate Test',\r\n        timed : true,\r\n        titled : true\r\n    },\r\n    {\r\n        outer : ' ',\r\n        inner : ' bkg',\r\n        doClip : false,\r\n        isTest : true,\r\n        name : 'Background Test',\r\n        timed : true,\r\n        titled : true\r\n    },\r\n    {\r\n        outer : ' shadow',\r\n        inner : ' bkg',\r\n        doClip : false,\r\n        isTest : true,\r\n        name : 'Background + Shadow Test',\r\n        timed : true,\r\n        titled : true\r\n    },\r\n    {\r\n        outer : ' shadow',\r\n        inner : ' bkg scale',\r\n        doClip : false,\r\n        isTest : true,\r\n        name : 'Background + Shadow + Scale Test',\r\n        timed : true,\r\n        titled : true\r\n    },\r\n    {\r\n        outer : ' shadow',\r\n        inner : ' bkg rotatescale',\r\n        doClip : false,\r\n        isTest : true,\r\n        name : 'Background + Shadow + Scale + Rotate Test',\r\n        timed : true,\r\n        titled : true\r\n    },\r\n\r\n    /*\r\n    {\r\n        name : 'Clip Path Test',\r\n        comp : <ClipComponent />,\r\n        timed : true,\r\n        titled : true\r\n    },\r\n    {\r\n        name : 'Background Test',\r\n        comp : <BackgroundComponent />,\r\n        timed : true,\r\n        titled : true\r\n    },\r\n    */\r\n    {\r\n        name: '',\r\n        comp: <End/>,\r\n        timed: false,\r\n        titled: false,\r\n        isTest : false\r\n    }\r\n];\r\n\r\nexport class MainComponent extends Component {\r\n\r\n    state = {\r\n        currentTest : 0,\r\n        progress : 0\r\n    };\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        window.mainComponent = this;\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        setInterval(this.handleProgress,1000)\r\n    }\r\n\r\n    handleProgress = () => {\r\n        let p = this.state.progress;\r\n        let t = this.state.currentTest;\r\n        if (tests[t].timed) {\r\n            if (p >= testLength) {\r\n                t++;\r\n                p = -1;\r\n            }\r\n            this.setState({\r\n                progress: p + 1,\r\n                currentTest: t\r\n            });\r\n        }\r\n    };\r\n\r\n    setTestNumber = (test) => {\r\n        if (test === 1) {\r\n            test = skip;\r\n        }\r\n        this.setState({\r\n            progress : 0,\r\n            currentTest : test\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {progress : p, currentTest : t} = this.state;\r\n        const {outer, inner, doClip} = tests[t];\r\n\r\n        return (\r\n            <div>\r\n                <div className='header'>\r\n                    <span className='title'>Browser Benchmark</span>\r\n                    {tests[t].titled ?\r\n                        <span className='subtitle'>{t + '. ' + tests[t].name}</span> :\r\n                        ''\r\n                    }\r\n                </div>\r\n                { tests[t].isTest ?\r\n                    <TestComponent testData={{outer, inner, testNum: t, doClip}}/>\r\n                    :\r\n                    tests[t].comp\r\n                }\r\n                <div className='bar' style={{\"width\" : (((p/testLength)*100)+'%')}}>\r\n                    <div className='progress'>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='devs'>\r\n                    <span className='title'>Desarrollado por:</span>\r\n                    <span className='names'>Mario Donato, Jose Luis Martinez, y Andrés Movilla.</span>\r\n                    <span className='year'>2019.</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.scss';\nimport {MainComponent} from \"./Components/MainComponent\";\n\nfunction App() {\n  return (\n      <MainComponent />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}